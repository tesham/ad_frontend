{"ast":null,"code":"import axios from\"axios\";import{refreshAccessToken}from\"../services/login\";const axiosInstance=axios.create({baseURL:\"http://127.0.0.1:8000/api/\"// other configurations\n});axiosInstance.interceptors.request.use(function(config){// Do something before request is sent\nvar token=localStorage.getItem(\"ip-tokens-access\");if(token){config.headers.Authorization=\"Bearer \"+token;}////\nreturn config;},function(error){// Do something with request error\nreturn Promise.reject(error);});axiosInstance.interceptors.response.use(response=>{return response;},async function(error){const originalRequest=error.config;if(error.response.status===403&&!originalRequest._retry){originalRequest._retry=true;const{data}=await refreshAccessToken();axios.defaults.headers.common[\"Authorization\"]=\"Bearer \"+data.refresh;return axiosInstance(originalRequest);}return Promise.reject(error);});export default axiosInstance;","map":{"version":3,"names":["axios","refreshAccessToken","axiosInstance","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject","response","originalRequest","status","_retry","data","defaults","common","refresh"],"sources":["/Users/technical/AD_AUS/code/ip-management/src/network/apiConfig.js"],"sourcesContent":["import axios from \"axios\";\nimport { refreshAccessToken } from \"../services/login\";\n\nconst axiosInstance = axios.create({\n  baseURL: \"http://127.0.0.1:8000/api/\",\n  // other configurations\n});\n\naxiosInstance.interceptors.request.use(\n  function (config) {\n    // Do something before request is sent\n    var token = localStorage.getItem(\"ip-tokens-access\");\n\n    if (token) {\n      config.headers.Authorization = \"Bearer \" + token;\n    }\n    ////\n\n    return config;\n  },\n  function (error) {\n    // Do something with request error\n    return Promise.reject(error);\n  }\n);\n\naxiosInstance.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  async function (error) {\n    const originalRequest = error.config;\n    if (error.response.status === 403 && !originalRequest._retry) {\n      originalRequest._retry = true;\n      const { data } = await refreshAccessToken();\n      axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + data.refresh;\n      return axiosInstance(originalRequest);\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport default axiosInstance;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,kBAAkB,KAAQ,mBAAmB,CAEtD,KAAM,CAAAC,aAAa,CAAGF,KAAK,CAACG,MAAM,CAAC,CACjCC,OAAO,CAAE,4BACT;AACF,CAAC,CAAC,CAEFF,aAAa,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CACpC,SAAUC,MAAM,CAAE,CAChB;AACA,GAAI,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,kBAAkB,CAAC,CAEpD,GAAIF,KAAK,CAAE,CACTD,MAAM,CAACI,OAAO,CAACC,aAAa,CAAG,SAAS,CAAGJ,KAAK,CAClD,CACA;AAEA,MAAO,CAAAD,MAAM,CACf,CAAC,CACD,SAAUM,KAAK,CAAE,CACf;AACA,MAAO,CAAAC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAC9B,CACF,CAAC,CAEDZ,aAAa,CAACG,YAAY,CAACY,QAAQ,CAACV,GAAG,CACpCU,QAAQ,EAAK,CACZ,MAAO,CAAAA,QAAQ,CACjB,CAAC,CACD,eAAgBH,KAAK,CAAE,CACrB,KAAM,CAAAI,eAAe,CAAGJ,KAAK,CAACN,MAAM,CACpC,GAAIM,KAAK,CAACG,QAAQ,CAACE,MAAM,GAAK,GAAG,EAAI,CAACD,eAAe,CAACE,MAAM,CAAE,CAC5DF,eAAe,CAACE,MAAM,CAAG,IAAI,CAC7B,KAAM,CAAEC,IAAK,CAAC,CAAG,KAAM,CAAApB,kBAAkB,CAAC,CAAC,CAC3CD,KAAK,CAACsB,QAAQ,CAACV,OAAO,CAACW,MAAM,CAAC,eAAe,CAAC,CAAG,SAAS,CAAGF,IAAI,CAACG,OAAO,CACzE,MAAO,CAAAtB,aAAa,CAACgB,eAAe,CAAC,CACvC,CACA,MAAO,CAAAH,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAC9B,CACF,CAAC,CAED,cAAe,CAAAZ,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}