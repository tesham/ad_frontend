{"ast":null,"code":"var _jsxFileName = \"/Users/technical/AD_AUS/code/ip-management/src/components/login/LoginUser.jsx\",\n  _s = $RefreshSig$();\nimport { Box, Button, Container, Typography, TextField } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport { login } from \"../../services/login\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction LoginUser() {\n  _s();\n  const navigate = useNavigate();\n  const [formValues, setFormValues] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [loading, setLoading] = useState(false);\n  const getData = e => {\n    const {\n      value,\n      name\n    } = e.target;\n    setFormValues(() => {\n      return {\n        ...formValues,\n        [name]: value\n      };\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      sx: {\n        bgcolor: \"rgba(255,255,255,0.8)\",\n        borderRadius: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h5\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          component: \"form\",\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            id: \"email\",\n            type: \"email\",\n            label: \"Email Address\",\n            name: \"email\",\n            autoComplete: \"email\",\n            autoFocus: true,\n            onChange: getData,\n            sx: {\n              bgcolor: \"white\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            name: \"password\",\n            label: \"Password\",\n            type: \"password\",\n            id: \"password\",\n            autoComplete: \"current-password\",\n            onChange: getData,\n            sx: {\n              bgcolor: \"white\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            fullWidth: true,\n            variant: \"contained\",\n            sx: {\n              mt: 3,\n              mb: 2,\n              textTransform: \"none\"\n            },\n            onClick: async e => {\n              e.preventDefault();\n              try {\n                setLoading(true);\n                const token = await login({\n                  username: formValues.email,\n                  password: formValues.password\n                });\n                console.log(token);\n                localStorage.setItem(\"ip-tokens-access\", token.access);\n                localStorage.setItem(\"ip-tokens-refresh\", token.refresh);\n                navigate(\"/\");\n              } catch (e) {} finally {\n                setLoading(false);\n              }\n            },\n            children: [!loading && /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Sign In\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 28\n            }, this), loading && /*#__PURE__*/_jsxDEV(CircularProgress, {\n              sx: {\n                mx: 2\n              },\n              size: 20,\n              color: \"info\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(LoginUser, \"HLJLvD7EzTQqR/XEZvO87KjsMlM=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginUser;\nexport default LoginUser;\nvar _c;\n$RefreshReg$(_c, \"LoginUser\");","map":{"version":3,"names":["Box","Button","Container","Typography","TextField","React","useState","login","CircularProgress","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginUser","_s","navigate","formValues","setFormValues","email","password","loading","setLoading","getData","e","value","name","target","children","component","maxWidth","sx","bgcolor","borderRadius","p","variant","fileName","_jsxFileName","lineNumber","columnNumber","margin","required","fullWidth","id","type","label","autoComplete","autoFocus","onChange","mt","mb","textTransform","onClick","preventDefault","token","username","console","log","localStorage","setItem","access","refresh","mx","size","color","_c","$RefreshReg$"],"sources":["/Users/technical/AD_AUS/code/ip-management/src/components/login/LoginUser.jsx"],"sourcesContent":["import { Box, Button, Container, Typography, TextField } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport { login } from \"../../services/login\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction LoginUser() {\n  const navigate = useNavigate();\n  const [formValues, setFormValues] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const [loading, setLoading] = useState(false);\n\n  const getData = (e) => {\n    const { value, name } = e.target;\n    setFormValues(() => {\n      return {\n        ...formValues,\n        [name]: value,\n      };\n    });\n  };\n\n  return (\n    <>\n      <Container\n        component=\"main\"\n        maxWidth=\"xs\"\n        sx={{ bgcolor: \"rgba(255,255,255,0.8)\", borderRadius: 2 }}\n      >\n        <Box sx={{ p: 4 }}>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign In\n          </Typography>\n          <Box component=\"form\">\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              type=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              onChange={getData}\n              sx={{ bgcolor: \"white\" }}\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              onChange={getData}\n              sx={{ bgcolor: \"white\" }}\n            />\n\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{\n                mt: 3,\n                mb: 2,\n                textTransform: \"none\",\n              }}\n              onClick={async (e) => {\n                e.preventDefault();\n                try {\n                  setLoading(true);\n                  const token = await login({\n                    username: formValues.email,\n                    password: formValues.password,\n                  });\n                  console.log(token);\n                  localStorage.setItem(\"ip-tokens-access\", token.access);\n                  localStorage.setItem(\"ip-tokens-refresh\", token.refresh);\n                  navigate(\"/\");\n                } catch (e) {\n                } finally {\n                  setLoading(false);\n                }\n              }}\n            >\n              {!loading && <span>Sign In</span>}\n              {loading && (\n                <CircularProgress sx={{ mx: 2 }} size={20} color=\"info\" />\n              )}\n            </Button>\n          </Box>\n        </Box>\n      </Container>\n    </>\n  );\n}\n\nexport default LoginUser;"],"mappings":";;AAAA,SAASA,GAAG,EAAEC,MAAM,EAAEC,SAAS,EAAEC,UAAU,EAAEC,SAAS,QAAQ,eAAe;AAC7E,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,KAAK,QAAQ,sBAAsB;AAC5C,OAAOC,gBAAgB,MAAM,gCAAgC;AAC7D,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE/C,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC;IAC3Ca,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE;EACZ,CAAC,CAAC;EACF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMiB,OAAO,GAAIC,CAAC,IAAK;IACrB,MAAM;MAAEC,KAAK;MAAEC;IAAK,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCT,aAAa,CAAC,MAAM;MAClB,OAAO;QACL,GAAGD,UAAU;QACb,CAACS,IAAI,GAAGD;MACV,CAAC;IACH,CAAC,CAAC;EACJ,CAAC;EAED,oBACEd,OAAA,CAAAE,SAAA;IAAAe,QAAA,eACEjB,OAAA,CAACT,SAAS;MACR2B,SAAS,EAAC,MAAM;MAChBC,QAAQ,EAAC,IAAI;MACbC,EAAE,EAAE;QAAEC,OAAO,EAAE,uBAAuB;QAAEC,YAAY,EAAE;MAAE,CAAE;MAAAL,QAAA,eAE1DjB,OAAA,CAACX,GAAG;QAAC+B,EAAE,EAAE;UAAEG,CAAC,EAAE;QAAE,CAAE;QAAAN,QAAA,gBAChBjB,OAAA,CAACR,UAAU;UAAC0B,SAAS,EAAC,IAAI;UAACM,OAAO,EAAC,IAAI;UAAAP,QAAA,EAAC;QAExC;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACb5B,OAAA,CAACX,GAAG;UAAC6B,SAAS,EAAC,MAAM;UAAAD,QAAA,gBACnBjB,OAAA,CAACP,SAAS;YACRoC,MAAM,EAAC,QAAQ;YACfC,QAAQ;YACRC,SAAS;YACTC,EAAE,EAAC,OAAO;YACVC,IAAI,EAAC,OAAO;YACZC,KAAK,EAAC,eAAe;YACrBnB,IAAI,EAAC,OAAO;YACZoB,YAAY,EAAC,OAAO;YACpBC,SAAS;YACTC,QAAQ,EAAEzB,OAAQ;YAClBQ,EAAE,EAAE;cAAEC,OAAO,EAAE;YAAQ;UAAE;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1B,CAAC,eACF5B,OAAA,CAACP,SAAS;YACRoC,MAAM,EAAC,QAAQ;YACfC,QAAQ;YACRC,SAAS;YACThB,IAAI,EAAC,UAAU;YACfmB,KAAK,EAAC,UAAU;YAChBD,IAAI,EAAC,UAAU;YACfD,EAAE,EAAC,UAAU;YACbG,YAAY,EAAC,kBAAkB;YAC/BE,QAAQ,EAAEzB,OAAQ;YAClBQ,EAAE,EAAE;cAAEC,OAAO,EAAE;YAAQ;UAAE;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1B,CAAC,eAEF5B,OAAA,CAACV,MAAM;YACL2C,IAAI,EAAC,QAAQ;YACbF,SAAS;YACTP,OAAO,EAAC,WAAW;YACnBJ,EAAE,EAAE;cACFkB,EAAE,EAAE,CAAC;cACLC,EAAE,EAAE,CAAC;cACLC,aAAa,EAAE;YACjB,CAAE;YACFC,OAAO,EAAE,MAAO5B,CAAC,IAAK;cACpBA,CAAC,CAAC6B,cAAc,CAAC,CAAC;cAClB,IAAI;gBACF/B,UAAU,CAAC,IAAI,CAAC;gBAChB,MAAMgC,KAAK,GAAG,MAAM/C,KAAK,CAAC;kBACxBgD,QAAQ,EAAEtC,UAAU,CAACE,KAAK;kBAC1BC,QAAQ,EAAEH,UAAU,CAACG;gBACvB,CAAC,CAAC;gBACFoC,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;gBAClBI,YAAY,CAACC,OAAO,CAAC,kBAAkB,EAAEL,KAAK,CAACM,MAAM,CAAC;gBACtDF,YAAY,CAACC,OAAO,CAAC,mBAAmB,EAAEL,KAAK,CAACO,OAAO,CAAC;gBACxD7C,QAAQ,CAAC,GAAG,CAAC;cACf,CAAC,CAAC,OAAOQ,CAAC,EAAE,CACZ,CAAC,SAAS;gBACRF,UAAU,CAAC,KAAK,CAAC;cACnB;YACF,CAAE;YAAAM,QAAA,GAED,CAACP,OAAO,iBAAIV,OAAA;cAAAiB,QAAA,EAAM;YAAO;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,EAChClB,OAAO,iBACNV,OAAA,CAACH,gBAAgB;cAACuB,EAAE,EAAE;gBAAE+B,EAAE,EAAE;cAAE,CAAE;cAACC,IAAI,EAAE,EAAG;cAACC,KAAK,EAAC;YAAM;cAAA5B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAC1D;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG;EAAC,gBACZ,CAAC;AAEP;AAACxB,EAAA,CA7FQD,SAAS;EAAA,QACCL,WAAW;AAAA;AAAAwD,EAAA,GADrBnD,SAAS;AA+FlB,eAAeA,SAAS;AAAC,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}