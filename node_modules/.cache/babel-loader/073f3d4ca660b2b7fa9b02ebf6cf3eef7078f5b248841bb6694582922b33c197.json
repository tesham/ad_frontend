{"ast":null,"code":"var _jsxFileName = \"/Users/technical/AD_AUS/code/ip-management/src/components/common/TableIPManagement.jsx\",\n  _s = $RefreshSig$();\nimport * as React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { getIpList } from \"../../services/iptable\";\nimport LinearProgress from \"@mui/material/LinearProgress\";\nimport EditIp from \"../dashboard/EditIp\";\nimport CreateIp from \"../dashboard/CreateIp\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TableIPManagement() {\n  _s();\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [rows, setRows] = React.useState([]);\n  React.useEffect(() => {\n    async function fetchData() {\n      setIsLoading(true);\n      const rows = await getIpList();\n      setRows(rows);\n      setIsLoading(false);\n    }\n    fetchData();\n  }, []);\n  async function fetchIpData() {\n    setIsLoading(true);\n    const rows = await getIpList();\n    setRows(rows);\n    setIsLoading(false);\n  }\n  const formatDate = date => {\n    let objectDate = new Date(date);\n    return objectDate.toLocaleString(\"en-UK\", {\n      day: \"numeric\",\n      // numeric, 2-digit\n      month: \"short\",\n      // numeric, 2-digit, long, short, narrow\n      year: \"numeric\",\n      // numeric, 2-digit\n      hour: \"2-digit\",\n      minute: \"2-digit\"\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        margin: \"-20px 0 16px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          margin: 0,\n          opacity: 0.84\n        },\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CreateIp, {\n        fetchData: fetchIpData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        sx: {\n          minWidth: 650\n        },\n        \"aria-label\": \"simple table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Id.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"IP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Created By\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Created At\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Updated At\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: [rows.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n            sx: {\n              \"&:last-child td, &:last-child th\": {\n                border: 0\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              component: \"th\",\n              scope: \"row\",\n              children: row.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: row.ip\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: row.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: row.created_by\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: formatDate(row.create_time)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: formatDate(row.update_time)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: /*#__PURE__*/_jsxDEV(EditIp, {\n                label: row.label,\n                id: row.id,\n                fetchData: fetchIpData\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this)]\n          }, row.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)), isLoading && /*#__PURE__*/_jsxDEV(TableRow, {\n            children: /*#__PURE__*/_jsxDEV(TableCell, {\n              colSpan: 7,\n              children: /*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(TableIPManagement, \"0BQQy5OxJBTDikgCv8WPbDjen6k=\");\n_c = TableIPManagement;\nvar _c;\n$RefreshReg$(_c, \"TableIPManagement\");","map":{"version":3,"names":["React","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","getIpList","LinearProgress","EditIp","CreateIp","jsxDEV","_jsxDEV","Fragment","_Fragment","TableIPManagement","_s","isLoading","setIsLoading","useState","rows","setRows","useEffect","fetchData","fetchIpData","formatDate","date","objectDate","Date","toLocaleString","day","month","year","hour","minute","children","style","display","justifyContent","alignItems","margin","opacity","fileName","_jsxFileName","lineNumber","columnNumber","component","sx","minWidth","align","map","row","border","scope","id","ip","label","created_by","create_time","update_time","colSpan","_c","$RefreshReg$"],"sources":["/Users/technical/AD_AUS/code/ip-management/src/components/common/TableIPManagement.jsx"],"sourcesContent":["import * as React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { getIpList } from \"../../services/iptable\";\nimport LinearProgress from \"@mui/material/LinearProgress\";\nimport EditIp from \"../dashboard/EditIp\";\nimport CreateIp from \"../dashboard/CreateIp\";\n\nexport default function TableIPManagement() {\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [rows, setRows] = React.useState([]);\n\n  React.useEffect(() => {\n    async function fetchData() {\n      setIsLoading(true);\n      const rows = await getIpList();\n      setRows(rows);\n      setIsLoading(false);\n    }\n    fetchData();\n  }, []);\n\n  async function fetchIpData() {\n    setIsLoading(true);\n    const rows = await getIpList();\n    setRows(rows);\n    setIsLoading(false);\n  }\n\n  const formatDate = (date) => {\n    let objectDate = new Date(date);\n\n    return objectDate.toLocaleString(\"en-UK\", {\n      day: \"numeric\", // numeric, 2-digit\n      month: \"short\", // numeric, 2-digit, long, short, narrow\n      year: \"numeric\", // numeric, 2-digit\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n    });\n  };\n  return (\n    <>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          margin: \"-20px 0 16px\",\n        }}\n      >\n        <h1 style={{ margin: 0, opacity: 0.84 }}>Dashboard</h1>\n        <CreateIp fetchData={fetchIpData} />\n      </div>\n      <TableContainer component={Paper}>\n        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Id.</TableCell>\n              <TableCell>IP</TableCell>\n              <TableCell>Name</TableCell>\n              <TableCell>Created By</TableCell>\n              <TableCell>Created At</TableCell>\n              <TableCell>Updated At</TableCell>\n              <TableCell align=\"center\">Edit</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map((row) => (\n              <TableRow\n                key={row.id}\n                sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n              >\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.id}\n                </TableCell>\n                <TableCell>{row.ip}</TableCell>\n                <TableCell>{row.label}</TableCell>\n                <TableCell>{row.created_by}</TableCell>\n                <TableCell>{formatDate(row.create_time)}</TableCell>\n                <TableCell>{formatDate(row.update_time)}</TableCell>\n                <TableCell align=\"center\">\n                  <EditIp\n                    label={row.label}\n                    id={row.id}\n                    fetchData={fetchIpData}\n                  />\n                </TableCell>\n              </TableRow>\n            ))}\n            {isLoading && (\n              <TableRow>\n                <TableCell colSpan={7}>\n                  <LinearProgress />\n                </TableCell>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}