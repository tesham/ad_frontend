{"ast":null,"code":"var _jsxFileName = \"/Users/technical/AD_AUS/code/ip-management/src/components/dashboard/CreateIp.jsx\",\n  _s = $RefreshSig$();\nimport * as React from \"react\";\nimport Drawer from \"@mui/material/Drawer\";\nimport Button from \"@mui/material/Button\";\nimport { IconButton, TextField } from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { createIp } from \"../../services/iptable\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreateIp({\n  fetchData\n}) {\n  _s();\n  const [open, setOpen] = React.useState(false);\n  const [ip, setIp] = React.useState(\"\");\n  const [labelEditable, setLableEditable] = React.useState(\"\");\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [error, setError] = React.useState(\"\");\n  const toggleDrawer = newOpen => () => {\n    setOpen(newOpen);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: toggleDrawer(true),\n      children: \"Create Ip\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      open: open,\n      onClose: toggleDrawer(false),\n      anchor: \"right\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: \"12px 32px\",\n          display: \"flex\",\n          flexDirection: \"column\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            style: {\n              opacity: 0.84\n            },\n            children: \"Create New IP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: toggleDrawer(false),\n            children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          name: \"ip\",\n          label: \"IP\",\n          type: \"text\",\n          id: \"ip-label-edit\",\n          autoComplete: \"current-password\",\n          onChange: e => setIp(e.target.value),\n          sx: {\n            bgcolor: \"white\",\n            width: 350\n          },\n          value: ip\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          fullWidth: true,\n          name: \"ip-label\",\n          label: \"IP Label\",\n          type: \"text\",\n          id: \"ip-label-edit\",\n          autoComplete: \"current-password\",\n          onChange: e => setLableEditable(e.target.value),\n          sx: {\n            bgcolor: \"white\",\n            width: 350\n          },\n          value: labelEditable\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          sx: {\n            mt: 2\n          },\n          onClick: async () => {\n            try {\n              setIsLoading(true);\n              const data = await createIp({\n                label: labelEditable,\n                ip: ip\n              });\n              if (data.error) {\n                setError(data.error);\n              }\n              fetchData();\n              toggleDrawer(false)();\n            } catch (e) {\n              console.log(e);\n            } finally {\n              setIsLoading(false);\n            }\n          },\n          children: [!isLoading && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Save Changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 28\n          }, this), isLoading && /*#__PURE__*/_jsxDEV(CircularProgress, {\n            sx: {\n              mx: 2\n            },\n            size: 20,\n            color: \"info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"red\"\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(CreateIp, \"3AIH9OJFJASxUTbEfIrYpG8sxao=\");\n_c = CreateIp;\nvar _c;\n$RefreshReg$(_c, \"CreateIp\");","map":{"version":3,"names":["React","Drawer","Button","IconButton","TextField","CloseIcon","createIp","CircularProgress","jsxDEV","_jsxDEV","CreateIp","fetchData","_s","open","setOpen","useState","ip","setIp","labelEditable","setLableEditable","isLoading","setIsLoading","error","setError","toggleDrawer","newOpen","children","variant","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onClose","anchor","style","padding","display","flexDirection","justifyContent","alignItems","opacity","margin","required","fullWidth","name","label","type","id","autoComplete","onChange","e","target","value","sx","bgcolor","width","mt","data","console","log","mx","size","color","_c","$RefreshReg$"],"sources":["/Users/technical/AD_AUS/code/ip-management/src/components/dashboard/CreateIp.jsx"],"sourcesContent":["import * as React from \"react\";\n\nimport Drawer from \"@mui/material/Drawer\";\nimport Button from \"@mui/material/Button\";\nimport { IconButton, TextField } from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { createIp } from \"../../services/iptable\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\n\nexport default function CreateIp({ fetchData }) {\n  const [open, setOpen] = React.useState(false);\n  const [ip, setIp] = React.useState(\"\");\n  const [labelEditable, setLableEditable] = React.useState(\"\");\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [error, setError] = React.useState(\"\");\n\n  const toggleDrawer = (newOpen) => () => {\n    setOpen(newOpen);\n  };\n\n  return (\n    <div>\n      <Button variant=\"contained\" onClick={toggleDrawer(true)}>\n        Create Ip\n      </Button>\n      <Drawer open={open} onClose={toggleDrawer(false)} anchor={\"right\"}>\n        <div\n          style={{\n            padding: \"12px 32px\",\n            display: \"flex\",\n            flexDirection: \"column\",\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n            }}\n          >\n            <h1 style={{ opacity: 0.84 }}>Create New IP</h1>\n            <IconButton onClick={toggleDrawer(false)}>\n              <CloseIcon />\n            </IconButton>\n          </div>\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"ip\"\n            label=\"IP\"\n            type=\"text\"\n            id=\"ip-label-edit\"\n            autoComplete=\"current-password\"\n            onChange={(e) => setIp(e.target.value)}\n            sx={{ bgcolor: \"white\", width: 350 }}\n            value={ip}\n          />\n          <TextField\n            margin=\"normal\"\n            fullWidth\n            name=\"ip-label\"\n            label=\"IP Label\"\n            type=\"text\"\n            id=\"ip-label-edit\"\n            autoComplete=\"current-password\"\n            onChange={(e) => setLableEditable(e.target.value)}\n            sx={{ bgcolor: \"white\", width: 350 }}\n            value={labelEditable}\n          />\n          <Button\n            variant=\"contained\"\n            sx={{ mt: 2 }}\n            onClick={async () => {\n              try {\n                setIsLoading(true);\n                const data = await createIp({ label: labelEditable, ip: ip });\n\n                if (data.error) {\n                  setError(data.error);\n                }\n                fetchData();\n                toggleDrawer(false)();\n              } catch (e) {\n                console.log(e);\n              } finally {\n                setIsLoading(false);\n              }\n            }}\n          >\n            {!isLoading && <span>Save Changes</span>}\n            {isLoading && (\n              <CircularProgress sx={{ mx: 2 }} size={20} color=\"info\" />\n            )}\n          </Button>\n          <p style={{ color: \"red\" }}>{error}</p>\n        </div>\n      </Drawer>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}