{"ast":null,"code":"var _jsxFileName = \"/Users/technical/AD_AUS/code/ip-management/src/components/common/TableIPManagement.jsx\",\n  _s = $RefreshSig$();\nimport * as React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { getIpList } from \"../../services/iptable\";\nimport LinearProgress from \"@mui/material/LinearProgress\";\nimport EditIp from \"../dashboard/EditIp\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TableIPManagement() {\n  _s();\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [rows, setRows] = React.useState([]);\n  React.useEffect(() => {\n    async function fetchData() {\n      setIsLoading(true);\n      const rows = await getIpList();\n      setRows(rows);\n      setIsLoading(false);\n    }\n    fetchData();\n  }, []);\n  async function fetchIpData() {\n    setIsLoading(true);\n    const rows = await getIpList();\n    setRows(rows);\n    setIsLoading(false);\n  }\n  const formatDate = date => {\n    let objectDate = new Date(date);\n    return objectDate.toLocaleString(\"en-UK\", {\n      day: \"numeric\",\n      // numeric, 2-digit\n      month: \"short\",\n      // numeric, 2-digit, long, short, narrow\n      year: \"numeric\",\n      // numeric, 2-digit\n      hour: \"2-digit\",\n      minute: \"2-digit\"\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      sx: {\n        minWidth: 650\n      },\n      \"aria-label\": \"simple table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Id.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"IP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Created By\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Created At\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Updated At\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: [rows.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n          sx: {\n            \"&:last-child td, &:last-child th\": {\n              border: 0\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            component: \"th\",\n            scope: \"row\",\n            children: row.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: row.ip\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: row.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: row.created_by\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: formatDate(row.create_time)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: formatDate(row.update_time)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: /*#__PURE__*/_jsxDEV(EditIp, {\n              label: row.label,\n              id: row.id,\n              fetchData: fetchIpData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)]\n        }, row.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)), isLoading && /*#__PURE__*/_jsxDEV(TableRow, {\n          children: /*#__PURE__*/_jsxDEV(TableCell, {\n            colSpan: 7,\n            children: /*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(TableIPManagement, \"0BQQy5OxJBTDikgCv8WPbDjen6k=\");\n_c = TableIPManagement;\nvar _c;\n$RefreshReg$(_c, \"TableIPManagement\");","map":{"version":3,"names":["React","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","getIpList","LinearProgress","EditIp","jsxDEV","_jsxDEV","TableIPManagement","_s","isLoading","setIsLoading","useState","rows","setRows","useEffect","fetchData","fetchIpData","formatDate","date","objectDate","Date","toLocaleString","day","month","year","hour","minute","component","children","sx","minWidth","fileName","_jsxFileName","lineNumber","columnNumber","align","map","row","border","scope","id","ip","label","created_by","create_time","update_time","colSpan","_c","$RefreshReg$"],"sources":["/Users/technical/AD_AUS/code/ip-management/src/components/common/TableIPManagement.jsx"],"sourcesContent":["import * as React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { getIpList } from \"../../services/iptable\";\nimport LinearProgress from \"@mui/material/LinearProgress\";\nimport EditIp from \"../dashboard/EditIp\";\n\nexport default function TableIPManagement() {\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [rows, setRows] = React.useState([]);\n\n  React.useEffect(() => {\n    async function fetchData() {\n      setIsLoading(true);\n      const rows = await getIpList();\n      setRows(rows);\n      setIsLoading(false);\n    }\n    fetchData();\n  }, []);\n\n  async function fetchIpData() {\n    setIsLoading(true);\n    const rows = await getIpList();\n    setRows(rows);\n    setIsLoading(false);\n  }\n\n  const formatDate = (date) => {\n    let objectDate = new Date(date);\n\n    return objectDate.toLocaleString(\"en-UK\", {\n      day: \"numeric\", // numeric, 2-digit\n      month: \"short\", // numeric, 2-digit, long, short, narrow\n      year: \"numeric\", // numeric, 2-digit\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n    });\n  };\n  return (\n    <TableContainer component={Paper}>\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Id.</TableCell>\n            <TableCell>IP</TableCell>\n            <TableCell>Name</TableCell>\n            <TableCell>Created By</TableCell>\n            <TableCell>Created At</TableCell>\n            <TableCell>Updated At</TableCell>\n            <TableCell align=\"center\">Edit</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow\n              key={row.id}\n              sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n            >\n              <TableCell component=\"th\" scope=\"row\">\n                {row.id}\n              </TableCell>\n              <TableCell>{row.ip}</TableCell>\n              <TableCell>{row.label}</TableCell>\n              <TableCell>{row.created_by}</TableCell>\n              <TableCell>{formatDate(row.create_time)}</TableCell>\n              <TableCell>{formatDate(row.update_time)}</TableCell>\n              <TableCell align=\"center\">\n                <EditIp label={row.label} id={row.id} fetchData={fetchIpData} />\n              </TableCell>\n            </TableRow>\n          ))}\n          {isLoading && (\n            <TableRow>\n              <TableCell colSpan={7}>\n                <LinearProgress />\n              </TableCell>\n            </TableRow>\n          )}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,cAAc,MAAM,8BAA8B;AACzD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,KAAK,MAAM,qBAAqB;AACvC,SAASC,SAAS,QAAQ,wBAAwB;AAClD,OAAOC,cAAc,MAAM,8BAA8B;AACzD,OAAOC,MAAM,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,eAAe,SAASC,iBAAiBA,CAAA,EAAG;EAAAC,EAAA;EAC1C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGhB,KAAK,CAACiB,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGnB,KAAK,CAACiB,QAAQ,CAAC,EAAE,CAAC;EAE1CjB,KAAK,CAACoB,SAAS,CAAC,MAAM;IACpB,eAAeC,SAASA,CAAA,EAAG;MACzBL,YAAY,CAAC,IAAI,CAAC;MAClB,MAAME,IAAI,GAAG,MAAMV,SAAS,CAAC,CAAC;MAC9BW,OAAO,CAACD,IAAI,CAAC;MACbF,YAAY,CAAC,KAAK,CAAC;IACrB;IACAK,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,eAAeC,WAAWA,CAAA,EAAG;IAC3BN,YAAY,CAAC,IAAI,CAAC;IAClB,MAAME,IAAI,GAAG,MAAMV,SAAS,CAAC,CAAC;IAC9BW,OAAO,CAACD,IAAI,CAAC;IACbF,YAAY,CAAC,KAAK,CAAC;EACrB;EAEA,MAAMO,UAAU,GAAIC,IAAI,IAAK;IAC3B,IAAIC,UAAU,GAAG,IAAIC,IAAI,CAACF,IAAI,CAAC;IAE/B,OAAOC,UAAU,CAACE,cAAc,CAAC,OAAO,EAAE;MACxCC,GAAG,EAAE,SAAS;MAAE;MAChBC,KAAK,EAAE,OAAO;MAAE;MAChBC,IAAI,EAAE,SAAS;MAAE;MACjBC,IAAI,EAAE,SAAS;MACfC,MAAM,EAAE;IACV,CAAC,CAAC;EACJ,CAAC;EACD,oBACEpB,OAAA,CAACR,cAAc;IAAC6B,SAAS,EAAE1B,KAAM;IAAA2B,QAAA,eAC/BtB,OAAA,CAACX,KAAK;MAACkC,EAAE,EAAE;QAAEC,QAAQ,EAAE;MAAI,CAAE;MAAC,cAAW,cAAc;MAAAF,QAAA,gBACrDtB,OAAA,CAACP,SAAS;QAAA6B,QAAA,eACRtB,OAAA,CAACN,QAAQ;UAAA4B,QAAA,gBACPtB,OAAA,CAACT,SAAS;YAAA+B,QAAA,EAAC;UAAG;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAW,CAAC,eAC1B5B,OAAA,CAACT,SAAS;YAAA+B,QAAA,EAAC;UAAE;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAW,CAAC,eACzB5B,OAAA,CAACT,SAAS;YAAA+B,QAAA,EAAC;UAAI;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAW,CAAC,eAC3B5B,OAAA,CAACT,SAAS;YAAA+B,QAAA,EAAC;UAAU;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAW,CAAC,eACjC5B,OAAA,CAACT,SAAS;YAAA+B,QAAA,EAAC;UAAU;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAW,CAAC,eACjC5B,OAAA,CAACT,SAAS;YAAA+B,QAAA,EAAC;UAAU;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAW,CAAC,eACjC5B,OAAA,CAACT,SAAS;YAACsC,KAAK,EAAC,QAAQ;YAAAP,QAAA,EAAC;UAAI;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAW,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACZ5B,OAAA,CAACV,SAAS;QAAAgC,QAAA,GACPhB,IAAI,CAACwB,GAAG,CAAEC,GAAG,iBACZ/B,OAAA,CAACN,QAAQ;UAEP6B,EAAE,EAAE;YAAE,kCAAkC,EAAE;cAAES,MAAM,EAAE;YAAE;UAAE,CAAE;UAAAV,QAAA,gBAE1DtB,OAAA,CAACT,SAAS;YAAC8B,SAAS,EAAC,IAAI;YAACY,KAAK,EAAC,KAAK;YAAAX,QAAA,EAClCS,GAAG,CAACG;UAAE;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eACZ5B,OAAA,CAACT,SAAS;YAAA+B,QAAA,EAAES,GAAG,CAACI;UAAE;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eAC/B5B,OAAA,CAACT,SAAS;YAAA+B,QAAA,EAAES,GAAG,CAACK;UAAK;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eAClC5B,OAAA,CAACT,SAAS;YAAA+B,QAAA,EAAES,GAAG,CAACM;UAAU;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACvC5B,OAAA,CAACT,SAAS;YAAA+B,QAAA,EAAEX,UAAU,CAACoB,GAAG,CAACO,WAAW;UAAC;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACpD5B,OAAA,CAACT,SAAS;YAAA+B,QAAA,EAAEX,UAAU,CAACoB,GAAG,CAACQ,WAAW;UAAC;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACpD5B,OAAA,CAACT,SAAS;YAACsC,KAAK,EAAC,QAAQ;YAAAP,QAAA,eACvBtB,OAAA,CAACF,MAAM;cAACsC,KAAK,EAAEL,GAAG,CAACK,KAAM;cAACF,EAAE,EAAEH,GAAG,CAACG,EAAG;cAACzB,SAAS,EAAEC;YAAY;cAAAe,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvD,CAAC;QAAA,GAbPG,GAAG,CAACG,EAAE;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAcH,CACX,CAAC,EACDzB,SAAS,iBACRH,OAAA,CAACN,QAAQ;UAAA4B,QAAA,eACPtB,OAAA,CAACT,SAAS;YAACiD,OAAO,EAAE,CAAE;YAAAlB,QAAA,eACpBtB,OAAA,CAACH,cAAc;cAAA4B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CACX;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAErB;AAAC1B,EAAA,CA5EuBD,iBAAiB;AAAAwC,EAAA,GAAjBxC,iBAAiB;AAAA,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}